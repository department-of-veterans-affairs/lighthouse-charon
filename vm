#!/usr/bin/env bash
set -euo pipefail

VM=VistA
MODE=headless
SSH_NAME=vvm

usage() {
cat<<EOF
Usage: $0 command
Manages a local Vista VirtualBox VM.

Commands
start - start the VM
stop - stop the VM
status - print if the VM is up or down
test - run unit tests that require the VM
it - run integration tests that require the VM

${1:-}
EOF
exit 1
}


main() {
  COMMAND="${1:-}"
  case $COMMAND in
    s|start) start;;
    st|status) status;;
    k|kill|stop) stop;;
    t|test) mvnTests;;
    it) integrationTests;;
    *) usage "unknown command: $COMMAND";;
  esac
}


launchProcessesMessage() {
cat<<EOF
1. SSH into the VM to restart processes: ssh -p 2222 root@localhost 
   Password: manager
2. Use the command 'm', you should now see 'VISTA>' on your terminal
3. Use the command 'D RESTART^ZTMB' (then y) to restart TaskMan and start the RPC Broker on port 9008
4. Use the command 'D START^XOBVTCP(8000)' to start Vistalink on port 8000 (if this is your first time using the VM, you _may_ need to run 'D UNLOCK^XOBVTCP(8000)' first)
5. Use the command 'D ^%SS' to verify there are processes in the VISTA namespace running on TCP ports 9008 and 8000

The above steps can be pasted into 'm' as:
---
D RESTART^ZTMB
Y
D START^XOBVTCP(8000)
D ^%SS
a
q
HALT

---
EOF
}

start() {
  launchProcessesMessage
  echo "Starting $VM in $MODE mode"
  VBoxManage startvm --type $MODE $VM
  launchProcessesMessage
}

status() {
  if VBoxManage list runningvms | grep -q -E "^\"$VM\""
  then
    echo up
  else
    echo down
  fi
}

stop() {
  ssh $SSH_NAME poweroff
}

vmNeeded() {
  if [ "$(status)" == "down" ]
  then
    echo "Vistalink VM doesn't appear to be running."
  exit 1
  fi
}

vistalinkSecretsNeeded() {
  if [ -n "${VISTA_VERIFY_CODE:-}" -o -n "${VISTA_ACCESS_CODE:-}" ]; then return; fi
  local vmConf="${SHANKTOSECRETS:-~/va/shanktosecrets}/vistalink/vista-vm.conf"
  if [ -f "$vmConf" ]; then . $vmConf; fi
}

mvnTests() {
  vmNeeded
  vistalinkSecretsNeeded
  mvn test \
    -f 'vistalink/pom.xml' \
    -Dtest=VistalinkRpcInvokerTest \
    -Dtest.vistalink=true \
    -Dvista.host=localhost \
    -Dvista.port=8000 \
    -Dvista.access-code=$VISTA_ACCESS_CODE \
    -Dvista.verify-code=$VISTA_VERIFY_CODE \
    -Dvista.division-ien=605
}

integrationTests() {
    vmNeeded
    vistalinkSecretsNeeded
    mvn -P'!standard' integration-test \
    -pl vistalink-tests \
    -Dtest.vistalink=true \
    -Dsentinel=LOCAL \
    -Dvista.access-code=$VISTA_ACCESS_CODE \
    -Dvista.verify-code=$VISTA_VERIFY_CODE
}

main $@
