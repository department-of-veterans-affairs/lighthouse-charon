<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gov.va.api.health</groupId>
    <artifactId>test-starter</artifactId>
    <version>7.0.23</version>
    <relativePath/>
  </parent>
  <groupId>gov.va.api.lighthouse</groupId>
  <artifactId>charon-tests</artifactId>
  <version>3.0.16-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <docker.imageName>lighthouse-${project.artifactId}</docker.imageName>
  </properties>
  <dependencies>
    <dependency>
      <groupId>gov.va.api.lighthouse</groupId>
      <artifactId>charon</artifactId>
      <version>${project.version}</version>
      <classifier>library</classifier>
    </dependency>
    <dependency>
      <groupId>gov.va.api.lighthouse</groupId>
      <artifactId>charon</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>sentinel</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-applications</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <includeArtifactIds>junit-platform-console-standalone,charon</includeArtifactIds>
              <stripVersion>true</stripVersion>
              <silent>true</silent>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Launch Charon for ITs -->
      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>process-exec-maven-plugin</artifactId>
        <version>${process-exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>charon-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>charon</name>
              <healthcheckUrl>http://localhost:8050/actuator/health</healthcheckUrl>
              <processLogFile>${project.build.directory}/charon.log</processLogFile>
              <arguments>
                <argument>java</argument>
                <argument>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5090</argument>
                <argument>-cp</argument>
                <argument>charon.jar</argument>
                <argument>-Dlogging.level.root=INFO</argument>
                <argument>-Dloader=gov.va.api.lighthouse.charon.service.Application</argument>
                <argument>-Dvistalink.configuration=${project.basedir}/../charon/src/main/resources/vistalink.properties</argument>
                <argument>-Dspring.config.location=classpath:/application.properties,file:${project.basedir}/config/secrets.properties</argument>
                <argument>-Dcharon.rpc.client-keys=~shanktopus~</argument>
                <argument>-Dclinical-authorization-status.access-code=123</argument>
                <argument>-Dclinical-authorization-status.verify-code=987</argument>
                <argument>-Dclinical-authorization-status.application-proxy-user=supershank</argument>
                <argument>-Dclinical-authorization-status.default-menu-option=shank</argument>
                <argument>org.springframework.boot.loader.PropertiesLauncher</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>stop-all</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-all</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>push</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
